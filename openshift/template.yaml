apiVersion: v1
kind: Template
metadata:
  name: test-react
  annotations:
    openshift.io/display-name: API Gateway
    iconClass: fa fa-code
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: test-react
    name: ${APP_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: test-react
    name: ${APP_NAME}
  spec:
    triggers: []
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    source:
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${IMAGE_NAME}:${IMAGE_VERSION}
          namespace: openshift
      type: Source
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: test-react
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: test-react
      deploymentconfig: ${APP_NAME}
      version: ${APP_VERSION}
    strategy:
      type: Rolling
      resources:
        requests: 
          cpu: 100m
          memory: 256Mi
          ephemeral-storage: 1Gi
        limits: 
          cpu: 100m
          memory: 256Mi
          ephemeral-storage: 1Gi
    template:
      metadata:
        annotations: 
          sidecar.istio.io/inject: 'true'
        labels:
          app: test-react
          deploymentconfig: ${APP_NAME}
          version: ${APP_VERSION}
      spec:
        containers:
        - image: ${APP_NAME}:latest
          name: test-react
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          livenessProbe: 
            httpGet:  
              path: /login  
              port: 8080 
              scheme: HTTP
            initialDelaySeconds: 10  
            timeoutSeconds: 3
            periodSeconds: 10  
            successThreshold: 1
            failureThreshold: 3
          readinessProbe: 
            httpGet:  
              path: /login  
              port: 8080 
              scheme: HTTP
            initialDelaySeconds: 10  
            timeoutSeconds: 3
            periodSeconds: 10  
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
    triggers: []
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: test-react
      deploymentconfig: ${APP_NAME}
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: test-react
      version: ${APP_VERSION}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: test-react
    name: ${APP_NAME}
  spec:
    to:
      kind: Service
      name: ${APP_NAME}
parameters:
- description: Application Name
  displayName: Application Name
  name: APP_NAME
  required: true
  value: test-react
- name: ENVIRONMENT
  displayName: Environment
  description: Environment
  required: true
  value: flow
- name: IMAGE_VERSION
  displayName: Image Base Version
  description: Image Base Version
  required: true
  value: '1.16'
- name: IMAGE_NAME
  displayName: Image Base Name
  description: Image Base Name
  required: true
  value: nginx
- name: APP_VERSION
  displayName: Version
  description: Version
  required: true
  value: s1
  